@use 'sass:math';

//Breakpoints variables:
$sm: 576px; // Small devices (landscape phones)
$md: 768px; // Medium devices (tablets)
$lg: 992px; // Large devices (desktops)
$xl: 1200px; // Extra large devices (large desktops)
$xxl: 1920px;
$cw: 1370px; // Container width value

// Fonts variables:
$play: 'Play', sans-serif;

// CSS Variables color:
$bgm: var(--bg-main);

$w: var(--text-color-100);

$grey: var(--text-dark-color-100);


$green: var(--primary-loot-color-100);

$red: var(--primary-danger-color-100);

$gr-grey: var(--gradient-main);

//Fluid-fonts variables:
$min-width: 360px; // min support resolution
$max-width: 1370px; // container width
// REM value calculate from $min-font-size to $max-font-size
$min-font-size: 16px;
$max-font-size: 24px;

@mixin below($width) {
  @media screen and (max-width: #{$width - 1px}) {
    @content;
  }
}

@mixin above($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin between($minWidth, $maxWidth) {
  @media screen and (min-width: $minWidth) and (max-width: #{$maxWidth - 1px}) {
    @content;
  }
}

@function strip-unit($value) {
  @return math.div($value, $value * 0 + 1);
}

@function rem($px, $size: $xxl) {
  $rem: null;
  @if ($size >= $max-width) {
    $rem: math.div($px, math.div($max-font-size, 1px));
  } @else {
    $remSize: $min-font-size +
      strip-unit($max-font-size - $min-font-size) *
      math.div($size - $min-width, strip-unit($max-width - $min-width));
    $rem: math.div($px, math.div($remSize, 1px));
  }
  @return #{$rem}rem;
}

@function vw($breakpoint, $values...) {
  $list: ();
  $current-vw: math.div(($breakpoint * 0.01), 1px);
  @each $arg in $values {
    $vw-value: math.div($arg, $current-vw) * 1vw;
    $list: append($list, $vw-value);
  }
  @return $list;
}

// only for flex parent
@mixin overflow-text {
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hover {
  @media (hover: hover) {
    &:not([disabled]):hover {
      @content;
    }
  }
}

@mixin hide-scroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

@mixin aspect($width, $height) {
  aspect-ratio: math.div($width, $height);

  @supports not (aspect-ratio: math.div($width, $height)) {
    &::before {
      content: '';
      float: left;
      padding-top: calc((#{$height} / #{$width}) * 100%);
    }

    &::after {
      content: '';
      display: block;
      clear: both;
    }
  }
}

@mixin title {
  font-size: var(--hs);
  font-weight: 700;
  margin-bottom: 16px;
}
